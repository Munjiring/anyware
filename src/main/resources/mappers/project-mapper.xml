<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="projectMapper">

	<resultMap type="Project" id="projectResult">
		<id column="project_no"  property="projectNo" />
		<result column="project_title"  property="projectTitle" />
		<result column="project_content"  property="projectContent" />
		<result column="public_status"  property="publicStatus" />
		<result column="create_date"  property="createDate" />
		<result column="status"  property="status" />
		<result column="like" property="like" />
		<result column="count" property="count" />
		<result column="owner" property="owner" />
		<result column="category" property="category" />
		<collection property="listList" resultMap="listResult" />
	</resultMap>
	
	<resultMap type="PjList" id="listResult">
		<id column="list_no" property="listNo" />
		<result column="list_title" property="listTitle" />
		<result column="begin_date" property="beginDate" />
		<result column="end_date" property="endDate" />
		<result column="color" property="color" />
	</resultMap>
	

	<select id="selectListCount" resultType="_int">
		select
		       count(*)
		  from (select distinct
		               p.project_no
		          from tb_project p
		          <choose>
				  	<when test="category == 'all-searhch' || category == 'my' || category == 'my-search'">
				  	  join tb_projectmember pm on (pm.project_no = p.project_no)
				      join tb_member m on (pm.member_no = m.member_no)
				  	</when>
				  	<when test="category == 'like' || category == 'like-search'">
				  	  join tb_like l on (l.project_no = p.project_no)
		    		  join tb_member m on (l.member_no = m.member_no)
				  	</when>
				  </choose>
		         where p.status = 'Y'
		            <choose>
		                <when test="category == 'my'">
		                    and pm.member_No = #{memberNo}
		                </when>
		                <when test="category == 'like'">
				 			and l.member_no = #{memberNo}
				 		</when>
		                <when test="category == 'all-search' || category == 'my-search' || category == 'like-search'">
				 			<choose>
				 				<when test="condition == 'title'">
				 					and project_title
				 				</when>
				 				<otherwise>
				 					and name
				 				</otherwise>
				 			</choose>
				 				like '%' || #{keyword} || '%'
				 			<if test="category == 'my-search'">
				 				and p.project_no in (select
							                            project_no
							                       from tb_projectmember
							                      where member_no = #{memberNo})
				 			</if>
				 			<if test="category == 'like-search'">
				 				and p.project_no in (select
							                                project_no
							                           from tb_like
							                          where member_no = #{memberNo})
							</if>
				 		</when>
				    </choose>
		        )
	</select>
	
	<select id="selectProjectList" resultMap="projectResult">
		select distinct
		       p.project_no
		     , project_title
		     , public_status
		     , (select 
		               count(*) 
		          from tb_like l 
		         where l.member_no = #{memberNo}
		           and project_no = p.project_no) "LIKE"
		     , (select
		               count(*)
		          from tb_projectmember pm
		         where pm.status = 1
		           and project_no = p.project_no) "COUNT"
		     , (select
		                name
		          from tb_projectmember pm
		          join tb_member using (member_no)
		         where pm.status = 1
		           and project_no = p.project_no
		           and owner_status = 'Y') "OWNER"
		  from tb_project p
		  <choose>
		  	<when test="category == 'all-searhch' || category == 'my' || category == 'my-search'">
		  	  join tb_projectmember pm on (pm.project_no = p.project_no)
		      join tb_member m on (pm.member_no = m.member_no)
		  	</when>
		  	<when test="category == 'like' || category == 'like-search'">
		  	  join tb_like l on (l.project_no = p.project_no)
    		  join tb_member m on (l.member_no = m.member_no)
		  	</when>
		  </choose>
		 where p.status = 'Y'
		 	<choose>
		 		<when test="category == 'my'">
		 			and pm.member_no = #{memberNo}
		 		</when>
		 		<when test="category == 'like'">
		 			and l.member_no = #{memberNo}
		 		</when>
		 		<when test="category == 'all-search' || category == 'my-search' || category == 'like-search'">
		 			<choose>
		 				<when test="condition == 'title'">
		 					and project_title
		 				</when>
		 				<otherwise>
		 					and name
		 				</otherwise>
		 			</choose>
		 				like '%' || #{keyword} || '%'
		 			<if test="category == 'my-search'">
		 				and p.project_no in (select
					                            project_no
					                       from tb_projectmember
					                      where member_no = #{memberNo})
		 			</if>
		 			<if test="category == 'like-search'">
		 				and p.project_no in (select
					                                project_no
					                           from tb_like
					                          where member_no = #{memberNo})
					</if>
		 		</when>
		 	</choose>
		 order
		 	by p.project_no desc
	</select>
	
	<insert id="insertProject">
		insert
		  into tb_project
		  (
		  	project_no
		  , project_title
		  , project_content
		  , public_status
		  ) 
		  values
		  (
		  	seq_pjno.nextval
		  , #{projectTitle}
		  , #{projectContent}
		  , #{publicStatus}
		  )
	</insert>
	
	<insert id="insertProjectMember">
		insert
		  into tb_projectmember
		  (
		  	project_no
		  , member_no
		  , owner_status
		  )
		  values
		  (
		  	seq_pjno.currval
		  , #{memberNo}
		  , 'Y'
		  )
	</insert>
	
	<delete id="deleteProject">
		delete 
		  from tb_project
		 where project_no = seq_pjno.currval
	</delete>
	
	<select id="selectNewProject" resultType="_int">
		select
			   seq_pjno.currval
		  from dual
	</select>
	
	<insert id="insertLike">
		insert
		  into tb_like
		  (
		  	member_no
		  , project_no
		  , like_date
		  )
		  values
		  (
		  	#{memberNo}
		  , #{projectNo}
		  , sysdate
		  )
	</insert>
	
	<delete id="deleteLike">
		delete
		  from tb_like
		 where member_no = #{memberNo}
		   and project_no = #{projectNo}
	</delete>
	
	<select id="selectProjectDetail" resultMap="projectResult">
		select
		       project_no
		     , project_title
		     , project_content
		     , list_no
		     , list_title
		     , begin_date
		     , end_date
		     , color
		  from tb_project
		  left join tb_list using (project_no)
		 where project_no = #{projectNo}
	</select>
	
</mapper>
