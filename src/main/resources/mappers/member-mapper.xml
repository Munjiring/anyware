<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd">
<mapper namespace="memberMapper">

<resultMap id="memberResult" type="Member">
	<id column="member_no" property="memberNo"/>
	<result column="dept_name" property="deptName"/>
	<result column="job_name" property="jobName"/>
	<result column="position" property="position"/>
	<result column="duty" property="duty"/>
	<result column="name" property="name"/>
	<result column="rrn" property="rrn"/>
	<result column="member_id" property="memberId"/>
	<result column="member_pwd" property="memberPwd"/>
	<result column="email" property="email"/>
	<result column="phone" property="phone"/>
	<result column="address" property="address"/>
	<result column="enroll_date" property="enrollDate"/>
	<result column="leave_off" property="leaveOff"/>
	<result column="profile_url" property="profileUrl"/>
	
	
</resultMap>

<resultMap id="commuteResult" type="Commute">
<id column="commute_no" property="commuteNo"/>
<result column="name" property="name"/>
<result column="commute_in" property="commuteIn"/>
<result column="commute_out" property="commuteOut"/>
<result column="Commute_date" property="commuteDate"/>
<result column="member_no" property="memberNo"/>
<result column="commute_status" property="commuteStatus"/>
</resultMap>

<resultMap id="leaveOffResult" type="LeaveOff">
<id column="dayoff_no" property="dayoffNo"/>
<result column="name" property="name"/>
<result column="apply_date" property="applyDate"/>
<result column="cancel_date" property="cancelDate"/>
<result column="status" property="status"/>
<result column="applicant_no" property="apNo"/>
<result column="off_date" property="offDate"/>
</resultMap>


	<select id="selectListCount" resultType="_int">
		select
				count(*)
			from tb_member
		   where status = 'Y'
	</select>

  <select id="selectAllMember" resultMap="memberResult">
    select
    		member_no,
    		dept_name,
    		job_name,
    		position,
    		duty,
    		name,
    		member_id,
    		member_pwd,
    		RPAD(SUBSTR(rrn, 1, 8), 14, '*') as "rrn",
    		email,
    		phone,
    		address,
    		to_char(enroll_date,'YYYY-MM-DD') as "enroll_date",
    		leave_off,
    		profile_url
    	from tb_member
       where status = 'Y'
    		
  </select>
  
  <select id="detailAllMember" resultMap="memberResult">
    select
    		member_no,
    		dept_name,
    		job_name,
    		position,
    		duty,
    		name,
    		member_id,
    		member_pwd,
    		TO_CHAR(to_date(substr(rrn,1,6),'RRMMDD'), 'YY"년" MM"월" DD"일"') as "rrn",
    		email,
    		phone,
    		address,
    		to_char(enroll_date,'YYYY-MM-DD') as "enroll_date",
    		leave_off,
    		profile_url
    	from tb_member
       where status = 'Y'
       and member_no = #{memberNo}
    		
  </select>
  
  <select id="loginUserRrn" resultMap="memberResult">
  	select
  			rrn
  		from tb_member
  	   where member_no = #{memberNo}
  </select>
  
  <select id="loginMember" resultMap="memberResult">
    select
    		member_no,
    		dept_name,
    		job_name,
    		position,
    		duty,
    		m.name,
    		member_id,
    		member_pwd,
    		TO_CHAR(to_date(substr(rrn,1,6),'RRMMDD'), 'YY"년" MM"월" DD"일"') as "rrn",
    		email,
    		phone,
    		address,
    		to_char(enroll_date,'YYYY-MM-DD') as "enroll_date",
    		leave_off,
    		profile_url
    		
    	from tb_member m
    	   		    	    	
       where status = 'Y'
       and member_id = #{memberId}
      
    		
  </select>
  
  <select id="selectPwd" resultMap="memberResult">
  	select 
  			member_pwd
  		from tb_member
  	   where member_pwd = #{memberPwd}
  </select>
  
 
  
   <update id="changePwd">
  	update
  			tb_member
  		set member_pwd = #{encPwd}
  	   where member_no = #{memberNo}
  </update>
  
   <update id="memberPersonalUpdate">
  	update
  			tb_member
  		set email = #{email},
  			
  			phone = #{phone},
  			
  			address = #{address}
  		where member_no = #{memberNo}
  			
  </update>
  <update id="allMemberUpdate">
  	update
  			tb_member
  		set 
  			
  			job_name = #{jobName},
  			position = #{position},
  			dept_name = #{deptName},
  			duty = #{duty}
  		where member_no = #{memberNo}
  			
  </update>
  
  <insert id="insertCommute">
  	insert
  			into tb_commute
  			(
  				COMMUTE_NO,
				NAME,
				COMMUTE_IN,
				COMMUTE_OUT,
				COMMUTE_DATE,
				MEMBER_NO,
				COMMUTE_STATUS
  			)
  			values
  			(
  				seq_cmn.nextval,
  				#{name},
  				to_char(sysdate, 'HH24:MI'),
  				null,
  				TO_CHAR(SYSDATE, 'YYYY-MM-DD'),
  				#{memberNo},
  				case when round((TO_DATE('09:01', 'HH24:MI') - TO_DATE(to_char(sysdate, 'HH24:MM'), 'HH24:MI')) * 24, 2) <![CDATA[<=]]> 0 then '지각'
				 when round((TO_DATE('09:01', 'HH24:MI') - TO_DATE(to_char(sysdate, 'HH24:MM'), 'HH24:MI')) * 24, 2) <![CDATA[>]]> 0 then '정상근무'
				 end 
  				
  			)
  </insert>
  
  <update id="commuteOut">
  	update
  			tb_commute
  		set commute_out = to_char(sysdate, 'HH24:MI')
  	where commute_no = (select commute_no
						        from(select  commute_no
						                    from tb_commute
						                   where member_no = #{memberNo}
						                   order by commute_no desc)
						    where rownum = 1)	
  </update>
  
  <select id="selectCommute" resultMap="commuteResult">
  	select
  				COMMUTE_NO,
				NAME,
				COMMUTE_IN,
				COMMUTE_OUT,
				COMMUTE_DATE,
				MEMBER_NO,
				COMMUTE_STATUS
  		from tb_commute
  	   where commute_no = (select commute_no
						        from(select  commute_no
						                    from tb_commute
						                   where member_no = #{memberNo}
						                   order by commute_no desc)
						    where rownum = 1)
  		
  </select>
  
  <select id="selectToday" resultType="string">
		select
				TO_CHAR(SYSDATE, 'YYYY-MM-DD')
			from dual
		   
	</select>
  
 <insert id="insertMember">
 	insert
 			into tb_member
 			(
 				member_no,
 				dept_name,
 				job_name,
 				position,
 				duty,
 				name,
 				rrn,
 				member_id,
 				member_pwd,
 				email,
 				phone,
 				address,
 				status,
 				enroll_date,
 				out_date,
 				leave_off,
 				profile_url
 			)
 			values
 			(
 				seq_mbn.nextval,
 				#{deptName},
 				#{jobName},
 				#{position},
 				#{duty},
 				#{name},
 				#{rrn},
 				#{memberId},
 				#{memberPwd},
 				#{email},
 				#{phone},
 				concat(#{address}, (#{detailAddress}||#{extraAddress})),
 				'Y',
 				to_date(#{enrollDate}, 'YY/MM/DD'), 
 				null,
 				12,
 				#{profileUrl}				
 			)
 </insert> 
 
 <update id="outMember">
 	update
 			tb_member
 		set status = 'N',
 			out_date = to_char(SYSDATE,'YYYY-MM-DD')
 	   where member_no = #{memberNo}
 </update>
 
 <select id="selectListCountOut" resultType="_int">
		select
				count(*)
			from tb_member
		   where status = 'N'
	</select>
	
<select id="selectOutMember" resultMap="memberResult">
    select
    		member_no,
    		dept_name,
    		job_name,
    		position,    		
    		name,
    		member_id,    		    		
    		email,    		
    		to_char(enroll_date,'YYYY-MM-DD') as "enroll_date",
    		out_date  		
    	from tb_member
       where status = 'N'
    		
  </select>
  
  <select id="searchPwd" resultMap="memberResult">
    select
    		member_no,
    		
    		member_id,
    		
    		email
    		
    	from tb_member
       where status = 'Y'
       and member_no = #{memberNo}
       and member_id = #{memberId}
    		
  </select>
  
  <update id="makeNewPwd">
  	update
  			tb_member
  		set member_pwd = #{encPwd}
  	   where member_no = #{memberNo}
  </update>
  

  <!-- 근태현황조회 -->
  
  <select id="selectLastOff" resultMap="leaveOffResult">
  	select
  			DAYOFF_NO,
  			APPLY_DATE,
  			CANCEL_DATE
  		from tb_dayoff
  	   where dayoff_no = (select dayoff_no
						        from(select  dayoff_no
						                    from tb_dayoff
						                   where applicant_no = #{memberNo}
						                   order by dayoff_no desc)
						    where rownum = 1)
  		
  </select>
  
  <select id="applyOff" resultMap="leaveOffResult">
  	select
  			DAYOFF_NO,
			NAME,
			APPLY_DATE,
			CANCEL_DATE,
			STATUS,
			APPLICANT_NO,
			OFF_DATE
		from tb_dayoff
	   where memberNo = #{memberNo}
  		
  </select>
  
    <!-- 근태현황조회 -->
  <select id="selectMemberAttendenceList" resultMap="commuteResult">
  select 
	     commute_no
	    , name
	    , member_no
	    , NVL(commute_in,'미입력') "commute_in"
        , NVL(commute_out,'미입력') "commute_out"
	    , round((to_date(commute_out,'HH24:MI:SS') - to_date(commute_in,'HH24:MI:SS'))*24,2) "commute_time"
	    , commute_date
	    , commute_status
 from tb_commute
  where member_no = #{memberNo}
  </select>
  
  
  <!-- 당일 근태 조회 -->
  <select id="selectTodayCommute" resultMap="commuteResult">
  select
     commute_no
    , name
    , member_no
    , commute_in
    , commute_out
    , round((to_date(commute_out,'HH24:MI:SS') - to_date(commute_in,'HH24:MI:SS'))*24,2) "commute_time"
    , commute_date
    , commute_status
 from tb_commute
 where member_no= #{memNo}
 and commute_date = TO_CHAR(SYSDATE, 'YYYY-MM-DD')
  
  </select>
  <!-- 주 근무시간 -->
  <select id="selectWeeklyCommute" resultType="_double">
  SELECT NVL(ROUND(SUM((TO_DATE(commute_out,'HH24:MI:SS') - TO_DATE(commute_in,'HH24:MI:SS'))*24),2),0) AS "weekly"
   FROM tb_commute
   where  TRUNC(TO_DATE(commute_date, 'YYYY-MM-DD'), 'IW') = TRUNC(SYSDATE, 'IW')
   and member_no= #{memNo}
  </select>
  <!-- 월 근무시간  -->
  <select id="selectMonthCommute" resultType="_double">
   SELECT NVL(SUM((TO_DATE(commute_out,'HH24:MI:SS') - TO_DATE(commute_in,'HH24:MI:SS'))*24),0) AS "month"
     FROM tb_commute
     WHERE EXTRACT(MONTH FROM  TO_DATE(commute_date,'YYYY-MM-DD')) = EXTRACT(MONTH FROM SYSDATE)
     and member_no= #{memNo}
  </select>
  
  
  
  
  
</mapper>