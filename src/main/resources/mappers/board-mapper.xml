<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">

	<resultMap id="boardResult" type="Board">
		<id column="board_no" property="boardNo" />
		<result column="board_title" property="boardTitle" />
		<result column="board_writer" property="boardWriter" />
		<result column="count" property="count" />
		<result column="create_date" property="createDate" />
		<result column="origin_name" property="originName" />
		<result column="change_name" property="changeName" />
		<result column="board_content" property="boardContent" />
		<result column="status" property="status" />
		<result column="category" property="category" />
		<result column="name" property="name" />
		<result column="job_name" property="jobName" />
		<result column="post_no" property="postNo" />
		<result column="member_no" property="memberNo" />
		<result column="report_content" property="reportContent" />
		<result column="report_date" property="reportDate" />
		<result column="report_no" property="reportNo" />
	</resultMap>
	
	<resultMap id="replyResult" type="Reply">
		<id column="reply_no" property="replyNo" />
		<result column="post_no" property="postNo" />
		<result column="member_no" property="memberNo" />
		<result column="reply_content" property="replyContent" />
		<result column="create_date" property="createDate" />
		<result column="status" property="status" />
		<result column="name" property="name" />
		<result column="job_name" property="jobName" />
		
	</resultMap>
	
	<select id="selectListCount" resultType="_int">
		select
		       count(*)
		  from tb_board
		 where status = 'Y'
	</select>
		<select id="selectRListCount" resultType="_int">
		select
		       count(*)
		  from tb_report
	</select>
	
	<!-- 자유게시판 조회 -->
	<select id="selectList" resultMap="boardResult">
		select
		       board_no
		     , board_title
		     , b.board_writer
		     , to_char(create_date, 'YYYY-MM-DD') as "create_date"
		     , count
		     , category
		     , m.name
		     , m.job_name
		  from tb_board b
		  join tb_member m on (b.board_writer = m.member_no)
		 where b.status = 'Y'
		 and b.category = '5'
		 order
		    by board_no desc
	</select>
	
	<!-- 공지사항 조회 -->
	<select id="selectNoticeList" resultMap="boardResult">
		select
		       board_no
		     , board_title
		     , b.board_writer
		     , to_char(create_date, 'YYYY-MM-DD') as "create_date"
		     , count
		     , m.name
		     , m.job_name
		  from tb_board b
		  join tb_member m on (b.board_writer = m.member_no)
		 where b.status = 'Y'
		 and b.category = '6'
		 order
		    by board_no desc
	</select>
	
	<!-- 팀별 게시판 조회 -->
	<select id="selectGroupList" resultMap="boardResult">
		select
		       board_no
		     , board_title
		     , b.board_writer
		     , to_char(create_date, 'YYYY-MM-DD') as "create_date"
		     , count
		     , category
             , m.name
             , m.job_name
		  from tb_board b
          join tb_member m on (b.board_writer = m.member_no)
		 where b.status = 'Y'
		 order
		    by board_no desc
	</select>
	
	<!-- 게시글 작성하기 -->
	<insert id="insertBoard">
		insert
			into tb_board
			(
			    board_no
			  , category
			  , board_title
			  , board_writer
			  , board_content
			  , origin_name
			  , change_name
			)
			values
			(
				SEQ_BONO.nextval
			  , #{category}	
			  , #{boardTitle}	
			  , #{boardWriter}	
			  , #{boardContent}
			  , #{originName}	
			  , #{changeName}		
			)
	</insert>
	
	<!-- 조회수 증가 -->
	<update id="increaseCount">
		update
			tb_board
		set count = count + 1
	  where board_no = #{boardNo}
	  	and status = 'Y'			
	</update>
	
	<!-- 게시글 상세조회 -->
	<select id="selectBoard" resultMap="boardResult">
		select
			   board_no
			 , board_title
			 , b.board_writer
			 , board_content
			 , to_char(create_date, 'YYYY-MM-DD') as "create_date"
			 , origin_name
			 , change_name
			 , category
			 , m.name
			 , m.job_name
		from tb_board b
		join tb_member m on (b.board_writer = m.member_no)
		where board_no = #{boardNo}	 	   	
	</select>
	
	<!-- 게시글 삭제하기 -->
	<update id="deleteBoard">
		update
			tb_board
		  set status = 'N'
		 where board_no = #{ boardNo} 	
	</update>
	
	<!-- 게시글 수정하기 -->
	<update id="updateBoard">
		update
		       tb_board
		   set board_title = #{boardTitle}
		   	 , category = #{category}	
		     , board_content = #{boardContent}
		     , origin_name = #{originName}
		     , change_name = #{changeName}
		 where board_no = #{boardNo}     
	</update>
	
	<!-- 댓글목록 조회 -->
	<select id="selectReplyList" resultMap="replyResult">
		select
				r.member_no
			  , r.post_no	
			  , r.reply_no
			  , reply_content 
			  , m.name	
			  , m.job_name
			  , to_char(create_date, 'YYYY-MM-DD') as "create_date"
			from tb_reply r
		 inner join tb_member m on (r.member_no = m.member_no) 		
		   where r.status = 'Y'
		    and r.post_no = #{boardNo}
		    order
		     by r.reply_no desc		  
	</select>
	
	<!-- 댓글작성 -->
	<insert id="insertReply">
		insert
			into tb_reply
			(
			reply_no
		  , reply_content
		  , post_no
		  , member_no
		  )
		  values
		  (
		    SEQ_RPNO.nextval
		  , #{replyContent}
		  , #{postNo}
		  , #{memberNo} 
		  )	
	</insert>
	
	<!-- 메인화면 자유게시판 -->
	<select id="selectMainBoardList" resultMap="boardResult">
		select *
			from (
				select			
				       board_no
				     , board_title
				  from tb_board
				 where status = 'Y'
				 and category = '5'
				 order
				    by board_no desc
			)
         where rownum between 1 and 8
	</select>
	
	<!-- 메인화면 공지사항 -->
	<select id="selectMainNoticeList" resultMap="boardResult">
		select *
			from (
				select			
				       board_no
				     , board_title
				  from tb_board
				 where status = 'Y'
				 and category = '6'
				 order
				    by board_no desc
			)
         where rownum between 1 and 8
	</select>

	<!-- 신고하기 -->
	<insert id="insertReport">
		insert
			into tb_report
			(
			    report_no
			  , post_no
			  , member_no
			  , report_content
			)
			values
			(
				SEQ_RENO.nextval
			  , #{postNo}	
			  , #{memberNo}	
			  , #{reportContent}	
		
			)
	</insert>
	
	<!-- 신고조회 -->
		<select id="selectReportList" resultMap="boardResult">
		select
		       report_no
		     , post_no
		     , r.member_no
		     , report_content
		     , r.status
		     , to_char(report_date, 'YYYY-MM-DD') as "report_date"
		     , m.name
		  from tb_report r
		  join tb_member m on (r.member_no = m.member_no)
		 order
		    by report_no desc
	</select>
	
	<!-- 블라인드처리 -->
	<update id="deleteReport">
		update
			tb_report
		  set status = 'Y'
		 where report_no = #{ report_no} 	
	</update>
</mapper>